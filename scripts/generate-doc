#!/usr/bin/env babel-node

import Identity from '../src/api/identity'
import IdentityAuthenticate from '../src/api/identity/Authenticate'
import Partners from '../src/api/partners'

const apis = [
  ['api.identity', 'Identity', Identity],
  ['api.identity', 'Identity > Authenticate', IdentityAuthenticate],
  ['api.partners', 'Partners', Partners]
]

apis.forEach(([ path, title, Api ]) => {
  console.log(`## ${title}`)

  Object.getOwnPropertyNames(Api.prototype)
    .filter(method => method !== 'constructor' && !method.match(/^_/))
    .forEach(method => {
      const fn = Api.prototype[method]

      console.log('### ' + path + '.' + method)
      console.log(`- [Documentation](${fn.documentationUrl})`)
      console.log(`- Snippet:
\`\`\`js
const result = await ${path}.${method}({ ${(fn.filterInput || []).join(', ')} })
\`\`\`
`)
    })
})
